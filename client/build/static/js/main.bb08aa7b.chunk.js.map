{"version":3,"sources":["components/Dashboard.jsx","components/PetForm.jsx","components/EditPet.jsx","components/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","to","map","pet","idx","petName","petType","_id","PetForm","setPetName","setPetType","petDesc","setPetDesc","petSkill1","setPetSkill1","petSkill2","setPetSkill2","petSkill3","setPetSkill3","errors","setErrors","onSubmit","e","preventDefault","newpet","post","navigate","errorResponse","response","errorArr","Object","keys","key","push","message","i","type","name","onChange","target","value","EditPet","updatedpet","put","setPet","onClick","delete","App","path","Details","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb08aa7b.chunk.js","sourcesContent":["import { Link, navigate, Router} from '@reach/router';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = (props) => {\r\n    const [pets, setPets] = useState([]);\r\n    \r\n    const getPets = () => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => {\r\n                console.log(res)\r\n                setPets(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    useEffect( () => {\r\n        getPets();\r\n    }, []);\r\n    return(\r\n        <div>\r\n        <div>\r\n            \r\n            These pets are looking for a good home\r\n            &nbsp;\r\n            <Link to=\"/pets/new\">Add a pet to the shelter</Link>\r\n\r\n        </div>\r\n        <fieldset>\r\n            \r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th><h1>Name</h1></th>\r\n                    <th><h1>Type</h1></th>\r\n                    <th><h1>Actions</h1></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {pets.map((pet, idx) => {\r\n                    return (\r\n                    <tr key={idx}>\r\n                        <td>{pet.petName}</td>\r\n                        <td>{pet.petType}</td>\r\n                        <td>\r\n                        <Link to={`/pets/${pet._id}/edit`}>Edit</Link>\r\n                        &nbsp; | &nbsp;\r\n                        <Link to={`/pets/${pet._id}`}>Details</Link>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </fieldset>\r\n    </div>\r\n)\r\n}\r\nexport default Dashboard;\r\n\r\n","import { Link, navigate, Router} from '@reach/router';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PetForm = (props) => {\r\n    const [petName, setPetName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [petDesc, setPetDesc] = useState(\"\");\r\n    const [petSkill1, setPetSkill1] = useState(\"\");\r\n    const [petSkill2, setPetSkill2] = useState(\"\");\r\n    const [petSkill3, setPetSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const addPet = (e) => {\r\n        e.preventDefault();\r\n        const newpet = {petName, petType, petDesc, petSkill1, petSkill2, petSkill3};\r\n        axios.post(\"http://localhost:8000/api/pets\", newpet)\r\n\r\n            .then(res =>{console.log(res);\r\n                    navigate(\"/\");\r\n                })\r\n                .catch(err=>{\r\n                    const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                    const errorArr = []; // Define a temp error array to push the messages in\r\n                    for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                        errorArr.push(errorResponse[key].message)\r\n                    }\r\n                    // Set Errors\r\n                    setErrors(errorArr);\r\n                })\r\n        }\r\n    return(\r\n        <div>\r\n        <div>\r\n                    Know a pet needing a home?\r\n                    &nbsp;\r\n                    <Link to=\"/\">back to home</Link>\r\n        </div>\r\n        <fieldset>\r\n            <form onSubmit={addPet} >\r\n            {errors.map((err, i) => (\r\n            <p key={i}>\r\n                {err}\r\n            </p>\r\n            ))}\r\n                <div>\r\n                    \r\n                    <div>\r\n                        <div>\r\n                            <label>Name:</label>\r\n                            <input type=\"text\"  name=\"petName\" onChange={e => setPetName(e.target.value)} />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label>Pet Type:</label>\r\n                            <input type=\"text\" onChange={e => setPetType(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Description:</label>\r\n                            <input onChange={e => setPetDesc(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Skill 1</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill1(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Skill 2</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill2(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Skill 3</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill3(e.target.value)} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Add Pet\" />\r\n\r\n                </div>\r\n                \r\n            </form>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PetForm;","import React, {useState, useEffect} from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nconst EditPet = (props) => {\r\n    const [petName, setPetName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [petDesc, setPetDesc] = useState(\"\");\r\n    const [petSkill1, setPetSkill1] = useState(\"\");\r\n    const [petSkill2, setPetSkill2] = useState(\"\");\r\n    const [petSkill3, setPetSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setPetName(res.data.petName);\r\n                setPetType(res.data.petType);\r\n                setPetDesc(res.data.petDesc);\r\n                setPetSkill1(res.data.petSkill1);\r\n                setPetSkill2(res.data.petSkill2);\r\n                setPetSkill3(res.data.petSkill3);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const editPet = (e) => {\r\n        e.preventDefault();\r\n        const updatedpet = {petName, petType, petDesc, petSkill1, petSkill2, petSkill3};\r\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, updatedpet)\r\n\r\n            .then(res =>{console.log(res);\r\n                    navigate(\"/\");\r\n                })\r\n                .catch(err=>{\r\n                    const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                    const errorArr = []; // Define a temp error array to push the messages in\r\n                    for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                        errorArr.push(errorResponse[key].message)\r\n                    }\r\n                    // Set Errors\r\n                    setErrors(errorArr);\r\n                })\r\n        }\r\n    return(\r\n        <div>\r\n        <div>\r\n                    Edit: {petName}\r\n                    &nbsp;\r\n                    <Link to=\"/\">back to home</Link>\r\n        </div>\r\n        <fieldset>\r\n            <form onSubmit={editPet} >\r\n            {errors.map((err, i) => (\r\n            <p key={i}>\r\n            {err}\r\n            </p>\r\n            ))}\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <label>Name:</label>\r\n                            <input type=\"text\"  onChange={e => setPetName(e.target.value)} value={petName}/>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label>Pet Type:</label>\r\n                            <input type=\"text\" onChange={e => setPetType(e.target.value)} value={petType}/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Description:</label>\r\n                            <input onChange={e => setPetDesc(e.target.value)} value={petDesc}/>\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label>Pet Skill 1</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill1(e.target.value)} value={petSkill1} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Skill 2</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill2(e.target.value)} value={petSkill2}/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Pet Skill 3</label>\r\n                            <input type=\"text\" onChange={e => setPetSkill3(e.target.value)} value={petSkill3}/>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Edit Pet\" />\r\n\r\n                </div>\r\n            </form>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default EditPet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default props => {\r\n\r\n    const [pet, setPet] = useState({})\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets/\" + props._id)\r\n            .then(res => setPet(res.data))\r\n    }, [])\r\n\r\n    const adoptPet = (_id) => {\r\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                axios.get(\"http://localhost:8000/api/pets\")\r\n                    .then( res => {\r\n                        setPet(res.data);\r\n                        navigate(\"/\")\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <div>\r\n                    Details about: { pet.petName } \r\n                    &nbsp;\r\n                    <Link to=\"/\">back to home</Link>\r\n        </div>\r\n        <fieldset>\r\n            \r\n            <div>\r\n                \r\n                <div>\r\n                    <p>Type: { pet.petType }</p>\r\n                    <p>Description: { pet.petDesc }</p>\r\n                    <p>Skills: \r\n                        <tr>{pet.petSkill1}</tr>\r\n                        <tr>{pet.petSkill2}</tr>\r\n                        <tr>{pet.petSkill3}</tr>\r\n                    </p>\r\n                </div>\r\n\r\n                <Link to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link>\r\n                &nbsp;\r\n                <button onClick={(e)=>{adoptPet(pet._id)}}>Adopt {pet.petName}!</button>\r\n\r\n            </div>  \r\n        </fieldset>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\nimport { Link, Router, Redirect } from '@reach/router';\nimport Dashboard from './components/Dashboard';\nimport PetForm from './components/PetForm';\nimport EditPet from './components/EditPet';\nimport Details from './components/Details';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Pet Shelter</h1>\n      <Router>\n        <Dashboard path=\"/\"/>\n        <PetForm path=\"/pets/new\"/>\n        <EditPet path=\"/pets/:_id/edit\"/>\n        <Details path=\"/pets/:_id\"/>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}